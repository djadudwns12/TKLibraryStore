<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.tn.mapper.OrderMapper">
  	
 
<!-- 박근영 -->
	<select id="selectUserAddress" resultType="com.tn.order.model.vo.AddressVO">
		SELECT receiver_name, address_key, receiver_phone, address, isDefault, request FROM Address WHERE userId = #{userId}
	</select>
	
	<select id="selectUserPoint" resultType="int">
		SELECT userPoint FROM Member WHERE userId = #{userId}
	</select>	
	
	<insert id="insertPaymentComplete" parameterType="com.tn.order.model.dto.PaymentInfoDTO" useGeneratedKeys="true" keyProperty="orderPK">
	    INSERT INTO `Order` (orderStatus, orderWho, orderAddress, usePoint, totalPay, orderNo, plannedPoint, orderName)
	    VALUES (
	        '결제완료', #{userId}, #{address}, 
	        <choose>
	            <when test="finalInputPoint != null">
	                #{finalInputPoint}
	            </when>
	            <otherwise>
	                0
	            </otherwise>
	        </choose>, #{totalAmount}, #{paymentId}, #{totalPoint}, #{orderName});
	</insert>
	
 	<select id="selectOrderBookNo" parameterType="com.tn.order.model.dto.PaymentInfoDTO" resultType="com.tn.order.model.vo.PaymentInfoVO">
		SELECT bookNo FROM Cart WHERE cartId IN <foreach item="Id" 
		collection="cartId" open="(" separator="," close=")" >#{Id}</foreach> AND userId = #{userId}
	</select>
	
	 <select id="selectOrderBookNoWithoutCartId" parameterType="com.tn.order.model.dto.PaymentInfoDTO" resultType="com.tn.order.model.vo.PaymentInfoVO">
		SELECT bookNo FROM BookList WHERE title = #{orderName}
	</select>
	
	
	<insert id="insertOrderBooks" parameterType="java.util.List">
	    INSERT INTO OrderBook (orderNo, bookNo, qty) 
	    VALUES 
	    <foreach item="book" collection="list" separator=",">
	        (#{book.orderNo}, #{book.bookNo}, #{book.qty})
	    </foreach>
	</insert>

	<update id="insertUserPoint" parameterType="com.tn.order.model.dto.PaymentInfoDTO">
	 	UPDATE Member SET userPoint = #{remainingPoint} WHERE userId = #{userId}
	</update>
	
	<insert id="insertUsePointLog" parameterType="com.tn.order.model.dto.PaymentInfoDTO">
		INSERT INTO PointLog (pWho, pWhy, pScore) VALUES (#{userId}, #{orderPK}, #{finalInputPoint})
	</insert>
	
	<delete id="deleteReflectCart" parameterType="com.tn.order.model.dto.PaymentInfoDTO">
	    DELETE FROM Cart WHERE cartId IN 
	    <foreach collection="cartId" item="id" open="(" separator="," close=")">#{id}</foreach>
	</delete>

	<select id="selectUserTotalPay" parameterType="com.tn.order.model.dto.PaymentInfoDTO" resultType="com.tn.order.model.vo.PaymentInfoVO">
		SELECT userTotalPay FROM Member WHERE userId = #{userId}
	</select>
	
	<update id="updateUserTotalPay" parameterType="com.tn.order.model.dto.PaymentInfoDTO">
		UPDATE Member SET userTotalPay = #{userTotalPay} WHERE userId = #{userId}
	</update>
	
	<update id="updateOrdersToShipping">
	    UPDATE `Order` SET orderStatus = '배송중' WHERE orderDate &lt; DATE_SUB(NOW(), INTERVAL 1 DAY) AND orderStatus = '결제완료' AND orderNo IS NOT NULL
	</update>
	
	<update id="updateOrdersToDelivered">
	    UPDATE `Order` SET orderStatus = '배송완료' WHERE orderDate &lt; DATE_SUB(NOW(), INTERVAL 3 DAY) AND orderStatus = '배송중' AND orderNo IS NOT NULL
	</update>
	
	<update id="updateBookNo" >
	    <foreach collection="list" item="book" separator=";">
	        UPDATE BookList SET inven = inven - #{book.qty} WHERE bookNo = #{book.bookNo}
	    </foreach>
	</update>





<!-- 박근영 -->

<!-- 엄영준 -->
    <!-- 회원이 주문한 목록 최근꺼 3개를 가지고 오는 쿼리문 -->
    <!-- OrderBookVO 매핑을 위한 ResultMap -->
    
    <resultMap type="com.tn.booklist.model.vo.BooklistVO" id="BooklistVOMap">
    <!-- BookList 테이블 필드 매핑 -->
        <result property="bookNo" column="bookNo" />
        <result property="title" column="title" javaType="String" />
        <result property="author" column="author" />
        <result property="publisher" column="publisher" />
        <result property="pubDate" column="pubDate" />
        <result property="genre" column="genre" />
        <result property="price" column="price" />
        <result property="salePrice" column="salePrice" />
        <result property="inven" column="inven" />
        <result property="thumbNail" column="thumbNail" />
        <result property="introduction" column="introduction" />
        <result property="zzim" column="zzim" />
        <result property="reviewCnt" column="reviewCnt" />
    </resultMap>
    
    <resultMap type="com.tn.order.model.vo.OrderBookVO" id="OrderBookVOMap">    	
        
        
        <!-- 주문 정보 필드 매핑 -->
        
        <result property="orderBookPK" column="orderBookPK" />
        <result property="bookNo" column="bookNo" />
        <result property="qty" column="qty" />
        <!-- 중첩된 BooklistVO 매핑 -->
        <association property="booklistVO" resultMap="BooklistVOMap" />
    </resultMap>
 
	<select id="selectRecentOrderList" resultMap="OrderBookVOMap">
		<!-- select b.* from
		(select o.orderPk , o.bookNo from mbcac2024.Order o inner Join Member m on
		o.orderWho = m.userId where o.orderWho = #{userId}) as userOrder
		inner join BookList b
		on userOrder.bookNo = b.bookNo order by userOrder.orderPk desc limit
		0,3; -->
		select b.* , userOrder.qty from
		(select o.orderPk , o.bookNo ,o.qty
		from (select ob.bookNo , o.orderPK ,o.orderWho,ob.qty from mbcac2024.Order o inner join OrderBook ob on o.orderNo = ob.orderNo) o 
		inner Join Member m 
		on o.orderWho = m.userId where o.orderWho = #{userId}) as userOrder
		inner join BookList b
		on userOrder.bookNo = b.bookNo order by userOrder.orderPk desc limit
		0,3;
	</select>
	<select id="selectMyPageOrderList" resultType="com.tn.order.model.vo.OrderVO">
		SELECT * FROM mbcac2024.Order where orderWho = #{userId}
	</select>
	<select id="selectDetailOrder" resultType="com.tn.order.model.vo.OrderDetailVO">
		select ob.orderNo, ob.qty,b.thumbNail,b.title,b.author,b.salePrice
			from OrderBook ob inner join BookList b
			on ob.bookNo = b.bookNo
			where ob.orderNo = #{orderNo}
	</select>
	
	<update id="updateOrderCancel" parameterType="list">
  			update mbcac2024.Order set orderStatus = '취소요청' where orderNo in 
  			<foreach collection="list" item="orderNo" open="(" separator="," close=")">
    			#{orderNo}
  			</foreach>
  	</update>
	
	
	

<!-- ==================================================최미설========================================================================== -->
	<!-- 배송완료 주문건 가져오기 -->
	<select id="getSinOrder" resultType="com.tn.order.model.vo.OrderVO">
		select * from `Order` where orderWho=#{userId} and orderNo='92162920-2cd5-4ff9-ae87-7dd3ce4d2cms' and orderStatus="배송완료"
	</select>
	
	<!-- 포인트 업데이트 -->
	<update id="updatePoint">
		update Member
		set userPoint = userPoint + #{plannedPoint}
		where userId=#{userId}
	</update>
	
	<!-- 포인트로그 추가 -->
	<insert id="recordPointLog">
		insert into PointLog(pWho, pWhy, pScore) 
		values (#{userId}, #{pWhy}, #{pScore})
	</insert>

	<!-- 탈퇴한 회원의 주소와 아이디 업데이트 -->
	<update id="updateUnregisterInfo">
		UPDATE `Order`
		SET orderAddress = '탈퇴한 회원입니다...', orderWho='unregist'
		WHERE orderWho = #{deletedMember}
	</update>
	
	<!-- 탈퇴요청하는 회원의 주문을 확인하는 쿼리문 -->
	<select id="checkRemainOrder" resultType="com.tn.order.model.vo.DeliveryComplete">
		select * from `Order` where orderStatus!='배송완료' and orderWho=#{deletedMember}
	</select>
	<!-- 스케줄러 : 매일 오후 3시에 배송완료된 주문건을 가져오는 쿼리문 -->
	<select id="findDeliveriesCompleted" resultType="com.tn.order.model.vo.DeliveryComplete">
	    SELECT `orderWho`, `plannedPoint`, `orderNo`
	    FROM `Order`
	    WHERE `orderStatus` = '배송완료'
	    AND `orderDate` &gt; DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 DAY)
	    AND `orderDate` &lt;= CURRENT_TIMESTAMP()
	</select>
<!-- ==================================================최미설========================================================================== -->
</mapper>